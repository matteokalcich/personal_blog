{"ast":null,"code":"var _jsxFileName = \"/Users/matteo/Documents/personal_blog/frontend/src/components/react/Frontoffice.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Header from './Header';\nimport { useNavigate } from 'react-router-dom';\nimport Post from './Post';\nimport PostList from './PostList';\nimport '../styles/index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Frontoffice() {\n  _s();\n  const formParolaRef = useRef(null);\n  const formAnnoRef = useRef(null);\n  const [parolaDaCercare, setParolaDaCercare] = useState('');\n  const [annoScelto, setAnnoScelto] = useState('2024');\n  const [postList, setPostList] = useState([]); // Usa lo stato per memorizzare i post\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const loginRedirect = () => {\n    navigate('/login');\n  };\n\n  // Funzione per eseguire la ricerca dei post\n  const filterRequest = async (parolaDaCercare, annoScelto) => {\n    try {\n      // Effettua la richiesta GET al server\n      const response = await fetch(`http://localhost:3000/api/filterRequest?ricercaParola=${parolaDaCercare}&ricercaAnno=${annoScelto}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (response.status === 200) {\n        setPostList(data.result); // Aggiorna lo stato con i risultati della query\n      } else {\n        setError(data.message); // Gestisci l'errore\n        setPostList([]);\n      }\n    } catch (error) {\n      console.error('Errore durante il filtro:', error);\n      setError('Errore del server.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formId = e.target.id;\n    if (formId === 'ricercaParola') {\n      console.log('Form Parola inviato');\n      filterRequest(parolaDaCercare, annoScelto); // Esegui la ricerca\n    } else if (formId === 'ricercaAnno') {\n      console.log('Form Anno inviato');\n      filterRequest(parolaDaCercare, annoScelto); // Esegui la ricerca\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginaIntera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Frontoffice, \"E10qRDnGshzAEVQjcapkr1BuT3A=\", false, function () {\n  return [useNavigate];\n});\n_c = Frontoffice;\nexport default Frontoffice;\nvar _c;\n$RefreshReg$(_c, \"Frontoffice\");","map":{"version":3,"names":["React","useState","useRef","Header","useNavigate","Post","PostList","jsxDEV","_jsxDEV","Fragment","_Fragment","Frontoffice","_s","formParolaRef","formAnnoRef","parolaDaCercare","setParolaDaCercare","annoScelto","setAnnoScelto","postList","setPostList","error","setError","navigate","loginRedirect","filterRequest","response","fetch","method","headers","data","json","status","result","message","console","handleSubmit","e","preventDefault","formId","target","id","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/matteo/Documents/personal_blog/frontend/src/components/react/Frontoffice.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Header from './Header';\nimport { useNavigate } from 'react-router-dom';\nimport Post from './Post';\nimport PostList from './PostList';\nimport '../styles/index.css';\n\nfunction Frontoffice() {\n  const formParolaRef = useRef(null);\n  const formAnnoRef = useRef(null);\n\n  const [parolaDaCercare, setParolaDaCercare] = useState('');\n  const [annoScelto, setAnnoScelto] = useState('2024');\n  const [postList, setPostList] = useState([]); // Usa lo stato per memorizzare i post\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const loginRedirect = () => {\n\n    navigate('/login');\n  }\n\n  // Funzione per eseguire la ricerca dei post\n  const filterRequest = async (parolaDaCercare, annoScelto) => {\n    try {\n      // Effettua la richiesta GET al server\n      const response = await fetch(\n        `http://localhost:3000/api/filterRequest?ricercaParola=${parolaDaCercare}&ricercaAnno=${annoScelto}`,\n        {\n          method: 'GET',\n          headers: { 'Content-Type': 'application/json' },\n        }\n      );\n\n      const data = await response.json();\n\n      if (response.status === 200) {\n\n\n        setPostList(data.result);  // Aggiorna lo stato con i risultati della query\n\n        \n      } else {\n        setError(data.message);  // Gestisci l'errore\n        setPostList([]);\n      }\n    } catch (error) {\n      console.error('Errore durante il filtro:', error);\n      setError('Errore del server.');\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const formId = e.target.id;\n\n    if (formId === 'ricercaParola') {\n      console.log('Form Parola inviato');\n      filterRequest(parolaDaCercare, annoScelto);  // Esegui la ricerca\n    } else if (formId === 'ricercaAnno') {\n      console.log('Form Anno inviato');\n      filterRequest(parolaDaCercare, annoScelto);  // Esegui la ricerca\n    }\n  };\n\n  return (\n    <>\n      <Header />\n\n      <div className=\"paginaIntera\">\n\n\n      </div>\n\n      \n    </>\n  );\n}\n\nexport default Frontoffice;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}