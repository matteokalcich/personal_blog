{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{useNavigate}from'react-router-dom';import PostList from'./PostList';import'../../styles/index.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RicercaPost=_ref=>{let{initialAnno=2024,onError,chiamante}=_ref;const formParolaRef=useRef(null);const formAnnoRef=useRef(null);const navigate=useNavigate();const[parolaDaCercare,setParolaDaCercare]=useState('');const[annoScelto,setAnnoScelto]=useState(initialAnno);const[postList,setPostList]=useState([]);const[error,setError]=useState('');useEffect(()=>{//ho fatto in modo che se cambia la variabile annoScelto allora eseguo la query per la ricerca per anno\nfilterRequest(parolaDaCercare,annoScelto);},[annoScelto]);// Funzione per eseguire la ricerca dei post\nconst filterRequest=async(parolaDaCercare,annoScelto)=>{try{const response=await fetch(`http://localhost:3000/api/filterRequest?ricercaParola=${parolaDaCercare}&ricercaAnno=${annoScelto}`,{method:'GET',headers:{'Content-Type':'application/json'}});const data=await response.json();if(response.status===200){setPostList(data.result);console.log('Ecco i risultati della query di ricerca: ',postList);setError('');}else{setError(data.message);setPostList([]);if(onError)onError(data.message);}}catch(error){console.error('Errore durante il filtro:',error);setError('Errore del server.');if(onError)onError('Errore del server.');}};const handleSubmit=async e=>{e.preventDefault();const formId=e.target.id;if(formId==='ricercaParola'){console.log('Form Parola inviato');filterRequest(parolaDaCercare,annoScelto);}else if(formId==='ricercaAnno'){console.log('Form Anno inviato');filterRequest(parolaDaCercare,annoScelto);}};const backofficeRender=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"centroPagina\",children:[/*#__PURE__*/_jsxs(\"form\",{ref:formParolaRef,onSubmit:handleSubmit,className:\"ricerca\",id:\"ricercaParola\",children:[/*#__PURE__*/_jsx(\"p\",{id:\"ricerca\",children:\"RICERCA\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"parolaDaCercare\",id:\"parolaDaCercare\",onChange:e=>setParolaDaCercare(e.target.value),value:parolaDaCercare}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",name:\"cerca\",id:\"cercaBtn\",children:\"CERCA\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",id:\"newPostBtn\",onClick:()=>{navigate('/nuovoPost');},children:\"NUOVO POST\"}),/*#__PURE__*/_jsxs(\"form\",{ref:formAnnoRef,onSubmit:handleSubmit,className:\"filtraAnno\",id:\"ricercaAnno\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",name:\"primoPost\",className:\"allDivFiltraAnno firstLastBtn\",children:/*#__PURE__*/_jsx(\"p\",{children:\"PRIMO\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",name:\"precedenteAnnoPost\",className:\"allDivFiltraAnno afterFirstBeforeLastBtn\",onClick:()=>setAnnoScelto(annoScelto-1),children:/*#__PURE__*/_jsx(\"p\",{children:\"Precedente\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"allDivFiltraAnno annoCorrente\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Anno Scelto: \",annoScelto]})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",name:\"successivoAnnoPost\",className:\"allDivFiltraAnno afterFirstBeforeLastBtn\",onClick:()=>setAnnoScelto(annoScelto+1),children:/*#__PURE__*/_jsx(\"p\",{children:\"Successivo\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",name:\"ultimoPost\",className:\"allDivFiltraAnno firstLastBtn\",children:/*#__PURE__*/_jsx(\"p\",{children:\"ULTIMO\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"post\",children:/*#__PURE__*/_jsx(PostList,{posts:postList,chiamanteP:chiamante})}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error})]});};const frontofficeRender=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"centroPagina\",children:[/*#__PURE__*/_jsxs(\"form\",{ref:formParolaRef,onSubmit:handleSubmit,className:\"ricerca\",id:\"ricercaParola\",children:[/*#__PURE__*/_jsx(\"p\",{id:\"ricerca\",children:\"RICERCA\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"parolaDaCercare\",id:\"parolaDaCercare\",onChange:e=>setParolaDaCercare(e.target.value),value:parolaDaCercare}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",name:\"cerca\",id:\"cercaBtn\",children:\"CERCA\"})]}),/*#__PURE__*/_jsxs(\"form\",{ref:formAnnoRef,onSubmit:handleSubmit,className:\"filtraAnno\",id:\"ricercaAnno\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",name:\"primoPost\",className:\"allDivFiltraAnno firstLastBtn\",children:/*#__PURE__*/_jsx(\"p\",{children:\"PRIMO\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",name:\"precedenteAnnoPost\",className:\"allDivFiltraAnno afterFirstBeforeLastBtn\",onClick:()=>setAnnoScelto(annoScelto-1),children:/*#__PURE__*/_jsx(\"p\",{children:\"Precedente\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"allDivFiltraAnno annoCorrente\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Anno Scelto: \",annoScelto]})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",name:\"successivoAnnoPost\",className:\"allDivFiltraAnno afterFirstBeforeLastBtn\",onClick:()=>setAnnoScelto(annoScelto+1),children:/*#__PURE__*/_jsx(\"p\",{children:\"Successivo\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",name:\"ultimoPost\",className:\"allDivFiltraAnno firstLastBtn\",children:/*#__PURE__*/_jsx(\"p\",{children:\"ULTIMO\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"post\",children:/*#__PURE__*/_jsx(PostList,{posts:postList,chiamanteP:chiamante})}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error})]});};switch(chiamante){case'frontoffice':return frontofficeRender();case'backoffice':return backofficeRender();}};export default RicercaPost;","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","PostList","jsx","_jsx","jsxs","_jsxs","RicercaPost","_ref","initialAnno","onError","chiamante","formParolaRef","formAnnoRef","navigate","parolaDaCercare","setParolaDaCercare","annoScelto","setAnnoScelto","postList","setPostList","error","setError","filterRequest","response","fetch","method","headers","data","json","status","result","console","log","message","handleSubmit","e","preventDefault","formId","target","id","backofficeRender","className","children","ref","onSubmit","type","name","onChange","value","onClick","posts","chiamanteP","frontofficeRender"],"sources":["/Users/matteo/Documents/personal_blog/frontend/src/site/react/components/RicercaPost.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PostList from './PostList';\nimport '../../styles/index.css';\n\nconst RicercaPost = ({ initialAnno = 2024, onError, chiamante }) => {\n  const formParolaRef = useRef(null);\n  const formAnnoRef = useRef(null);\n  const navigate = useNavigate();\n\n  const [parolaDaCercare, setParolaDaCercare] = useState('');\n  const [annoScelto, setAnnoScelto] = useState(initialAnno);\n  const [postList, setPostList] = useState([]);\n  const [error, setError] = useState('');\n  \n  useEffect(() => { //ho fatto in modo che se cambia la variabile annoScelto allora eseguo la query per la ricerca per anno\n\n    filterRequest(parolaDaCercare, annoScelto);\n\n  }, [annoScelto]);\n\n  // Funzione per eseguire la ricerca dei post\n  const filterRequest = async (parolaDaCercare, annoScelto) => {\n    try {\n      const response = await fetch(\n        `http://localhost:3000/api/filterRequest?ricercaParola=${parolaDaCercare}&ricercaAnno=${annoScelto}`,\n        {\n          method: 'GET',\n          headers: { 'Content-Type': 'application/json' },\n        }\n      );\n\n      const data = await response.json();\n\n      if (response.status === 200) {\n        \n        setPostList(data.result);\n        console.log('Ecco i risultati della query di ricerca: ', postList);\n        setError('');\n      } else {\n        setError(data.message);\n        setPostList([]);\n        if (onError) onError(data.message);\n      }\n    } catch (error) {\n      console.error('Errore durante il filtro:', error);\n      setError('Errore del server.');\n      if (onError) onError('Errore del server.');\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const formId = e.target.id;\n\n    if (formId === 'ricercaParola') {\n      console.log('Form Parola inviato');\n      filterRequest(parolaDaCercare, annoScelto);\n    } else if (formId === 'ricercaAnno') {\n      console.log('Form Anno inviato');\n      filterRequest(parolaDaCercare, annoScelto);\n    }\n  };\n\n\n  const backofficeRender = () => {\n\n    return (\n      <div className='centroPagina'>\n        <form ref={formParolaRef} onSubmit={handleSubmit} className='ricerca' id='ricercaParola'>\n          <p id='ricerca'>RICERCA</p>\n          <input\n            type='text'\n            name='parolaDaCercare'\n            id='parolaDaCercare'\n            onChange={(e) => setParolaDaCercare(e.target.value)}\n            value={parolaDaCercare}\n          />\n          <button type='submit' name='cerca' id='cercaBtn'>\n            CERCA\n          </button>\n        </form>\n\n        <button type='button' id='newPostBtn' onClick={() => {\n\n          navigate('/nuovoPost');\n\n        }}>NUOVO POST</button>\n  \n        <form ref={formAnnoRef} onSubmit={handleSubmit} className='filtraAnno' id='ricercaAnno'>\n          <button type='submit' name='primoPost' className='allDivFiltraAnno firstLastBtn'>\n            <p>PRIMO</p>\n          </button>\n          <button\n            type='button'\n            name='precedenteAnnoPost'\n            className='allDivFiltraAnno afterFirstBeforeLastBtn'\n            onClick={() => setAnnoScelto(annoScelto - 1)}\n          >\n            <p>Precedente</p>\n          </button>\n  \n          <div className='allDivFiltraAnno annoCorrente'>\n            <p>Anno Scelto: {annoScelto}</p>\n          </div>\n  \n          <button\n            type='button'\n            name='successivoAnnoPost'\n            className='allDivFiltraAnno afterFirstBeforeLastBtn'\n            onClick={() => setAnnoScelto(annoScelto + 1)}\n          >\n            <p>Successivo</p>\n          </button>\n  \n          <button type='submit' name='ultimoPost' className='allDivFiltraAnno firstLastBtn'>\n            <p>ULTIMO</p>\n          </button>\n        </form>\n  \n        <div className='post'>\n          <PostList posts={postList} chiamanteP={chiamante} />\n        </div>\n  \n        {error && <p className='error'>{error}</p>}\n      </div>\n    );\n\n  }\n\n  const frontofficeRender = () => {\n\n    return (\n      <div className='centroPagina'>\n        <form ref={formParolaRef} onSubmit={handleSubmit} className='ricerca' id='ricercaParola'>\n          <p id='ricerca'>RICERCA</p>\n          <input\n            type='text'\n            name='parolaDaCercare'\n            id='parolaDaCercare'\n            onChange={(e) => setParolaDaCercare(e.target.value)}\n            value={parolaDaCercare}\n          />\n          <button type='submit' name='cerca' id='cercaBtn'>\n            CERCA\n          </button>\n        </form>\n  \n        <form ref={formAnnoRef} onSubmit={handleSubmit} className='filtraAnno' id='ricercaAnno'>\n          <button type='submit' name='primoPost' className='allDivFiltraAnno firstLastBtn'>\n            <p>PRIMO</p>\n          </button>\n          <button\n            type='button'\n            name='precedenteAnnoPost'\n            className='allDivFiltraAnno afterFirstBeforeLastBtn'\n            onClick={() => setAnnoScelto(annoScelto - 1)}\n          >\n            <p>Precedente</p>\n          </button>\n  \n          <div className='allDivFiltraAnno annoCorrente'>\n            <p>Anno Scelto: {annoScelto}</p>\n          </div>\n  \n          <button\n            type='button'\n            name='successivoAnnoPost'\n            className='allDivFiltraAnno afterFirstBeforeLastBtn'\n            onClick={() => setAnnoScelto(annoScelto + 1)}\n          >\n            <p>Successivo</p>\n          </button>\n  \n          <button type='submit' name='ultimoPost' className='allDivFiltraAnno firstLastBtn'>\n            <p>ULTIMO</p>\n          </button>\n        </form>\n  \n        <div className='post'>\n          <PostList posts={postList} chiamanteP={chiamante}/>\n        </div>\n  \n        {error && <p className='error'>{error}</p>}\n      </div>\n    );\n\n  }\n\n\n  switch(chiamante){\n\n\n    case 'frontoffice':\n\n      return frontofficeRender();\n\n    case 'backoffice':\n\n      return backofficeRender();\n  }\n\n\n  \n\n\n  \n};\n\nexport default RicercaPost;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}