{"ast":null,"code":"var _jsxFileName = \"/Users/matteo/Documents/personal_blog/frontend/src/site/react/pages/ModificaPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Header from '../components/Header';\nimport RicercaPost from '../components/RicercaPost';\nimport '../../styles/index.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModificaPost({\n  username\n}) {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const id = location.state ? location.state.id : null;\n  ; // Estrae id dallo stato, e gestisce il caso in cui sia undefined\n\n  const [file, setFile] = useState(null);\n  const [titoloPostInsert, setTitoloPostInsert] = useState('');\n  const [descrizionePostInsert, setDescrizionePostInsert] = useState('');\n  const [immaginePostInsert, setImmaginePostInsert] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const handleFileChange = async event => {\n    setFile(event.target.files[0]);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://localhost:3000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      console.error(error);\n      setMessage(\"File upload failed.\");\n    }\n  };\n\n  // const handleUploadFile = () => {\n  //     const data = new FormData();\n  //     data.append('file', document.getElementById('file').files[0]);\n  //     data.append('name', 'test');\n\n  //     console.log('Dati file: ', data);\n  //     // '/files' is your node.js route that triggers our middleware\n  //     axios.post('http://localhost:3000/files', data).then((response) => {\n  //       console.log(response); // do something with the response\n  //     });\n\n  // }\n\n  // Funzione per eseguire la ricerca dei post\n  const filterRequest = async elimina => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/changePost`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          idPost: id,\n          titoloPost: titoloPostInsert,\n          descrizionePost: descrizionePostInsert,\n          pathFotoPost: immaginePostInsert,\n          elimina\n        })\n      });\n      const data = await response.json();\n      if (response.status === 200) {\n        setError('');\n      } else {\n        setError(data.message);\n      }\n    } catch (error) {\n      console.error('Errore durante il filtro:', error);\n      setError('Errore del server.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('FILE: ', document.getElementById('file').files[0]);\n  };\n  const handleClick = t => {\n    switch (t) {\n      case 'modifica':\n        filterRequest(false);\n        navigate('/backoffice');\n        break;\n      case 'elimina':\n        filterRequest(true);\n        navigate('/backoffice');\n        break;\n    }\n  };\n  const loginRedirect = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paginaIntera\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Ciao \", username, \", sei pronto a modificare/eliminare il post?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: loginRedirect,\n        children: \"LOGOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"titoloPostToInsert\",\n        placeholder: \"Titolo\",\n        onChange: e => {\n          setTitoloPostInsert(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"descrizionePostToInsert\",\n        placeholder: \"Descrizione\",\n        onChange: e => {\n          setDescrizionePostInsert(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"immaginePostToInsert\",\n        id: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"Annulla\",\n        onClick: () => handleClick('annulla'),\n        children: \"Annulla Modifiche\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"modificaPost\",\n        onClick: () => handleClick('modifica'),\n        children: \"Modifica Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"eliminaPost\",\n        onClick: () => handleClick('elimina'),\n        children: \"Elimina Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n_s(ModificaPost, \"lEEQRrXn2g7G/L3ua+cDaiTo1Dk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ModificaPost;\nexport default ModificaPost;\nvar _c;\n$RefreshReg$(_c, \"ModificaPost\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","Header","RicercaPost","axios","jsxDEV","_jsxDEV","ModificaPost","username","_s","navigate","location","id","state","file","setFile","titoloPostInsert","setTitoloPostInsert","descrizionePostInsert","setDescrizionePostInsert","immaginePostInsert","setImmaginePostInsert","error","setError","message","setMessage","handleFileChange","event","target","files","formData","FormData","append","response","post","headers","data","console","filterRequest","elimina","fetch","method","body","JSON","stringify","idPost","titoloPost","descrizionePost","pathFotoPost","json","status","handleSubmit","e","preventDefault","log","document","getElementById","handleClick","t","loginRedirect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","action","onSubmit","encType","name","placeholder","onChange","value","_c","$RefreshReg$"],"sources":["/Users/matteo/Documents/personal_blog/frontend/src/site/react/pages/ModificaPost.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Header from '../components/Header';\nimport RicercaPost from '../components/RicercaPost';\nimport '../../styles/index.css';\nimport axios from 'axios';\n\nfunction ModificaPost({username}) {\n\n    const navigate = useNavigate();\n    const location = useLocation();\n    const id = location.state ? location.state.id : null;; // Estrae id dallo stato, e gestisce il caso in cui sia undefined\n\n    const [file, setFile] = useState(null);\n    const [titoloPostInsert, setTitoloPostInsert] = useState('');\n    const [descrizionePostInsert, setDescrizionePostInsert] = useState('');\n    const [immaginePostInsert, setImmaginePostInsert] = useState('');\n    const [error, setError] = useState('');\n    const [message, setMessage] = useState('');\n\n\n    const handleFileChange = async (event) => {\n\n        setFile(event.target.files[0]);\n        const formData = new FormData();\n        formData.append(\"file\", file);\n\n        try {\n            const response = await axios.post(\"http://localhost:3000/upload\", formData, {\n                headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n        });\n\n            setMessage(response.data.message);\n            \n        } catch (error) {\n            console.error(error);\n            setMessage(\"File upload failed.\");\n        }\n    };\n\n\n\n    // const handleUploadFile = () => {\n    //     const data = new FormData();\n    //     data.append('file', document.getElementById('file').files[0]);\n    //     data.append('name', 'test');\n\n    //     console.log('Dati file: ', data);\n    //     // '/files' is your node.js route that triggers our middleware\n    //     axios.post('http://localhost:3000/files', data).then((response) => {\n    //       console.log(response); // do something with the response\n    //     });\n        \n    // }\n\n\n    // Funzione per eseguire la ricerca dei post\n    const filterRequest = async (elimina) => {\n\n        try {\n            const response = await fetch(\n                `http://localhost:3000/api/changePost`,\n                {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    \n                    body: JSON.stringify({ \n                        idPost: id, \n                        titoloPost: titoloPostInsert, \n                        descrizionePost: descrizionePostInsert, \n                        pathFotoPost: immaginePostInsert, \n                        elimina \n                    }),\n                    \n                }\n            );\n\n            const data = await response.json();\n\n            if (response.status === 200) {\n\n                setError('');\n                \n            } else {\n\n                setError(data.message);\n            }\n\n        } catch (error) {\n\n            console.error('Errore durante il filtro:', error);\n            setError('Errore del server.');\n\n        }\n    };\n\n    const handleSubmit = async (e) => {\n\n        e.preventDefault();\n\n        console.log('FILE: ', document.getElementById('file').files[0]);\n\n\n    }\n\n    const handleClick = (t) => {\n\n        switch(t){\n\n            case 'modifica':\n\n\n                filterRequest(false);\n\n                navigate('/backoffice');\n\n                break;\n\n\n            case 'elimina':\n\n                filterRequest(true);\n\n                navigate('/backoffice');\n\n                break;\n        }\n    }\n\n\n    const loginRedirect = () => {\n  \n      navigate('/');\n    };\n\n    return (\n\n        <div className='paginaIntera'>\n        \n            <Header />\n\n            <div className='welcome'>\n                <h2>Ciao {username}, sei pronto a modificare/eliminare il post?</h2>\n                <button type='button' onClick={loginRedirect}>\n                    LOGOUT\n                </button>\n            </div>\n\n            <form action='' onSubmit={handleSubmit} encType='multipart/form-data'>\n\n                <input type='text' name='titoloPostToInsert' placeholder='Titolo' onChange={(e) => {\n\n                    setTitoloPostInsert(e.target.value);\n\n                }}/>\n                <textarea name='descrizionePostToInsert' placeholder='Descrizione' onChange={(e) => {\n\n                    setDescrizionePostInsert(e.target.value);\n\n                }}/>\n\n                <input type='file' name='immaginePostToInsert' id='file'\n\n                    onChange={handleFileChange}\n                />\n                <button type='submit' name='Annulla' onClick={() => handleClick('annulla')}>Annulla Modifiche</button>\n                <button type='submit' name='modificaPost' onClick={() => handleClick('modifica')}>Modifica Post</button>\n                <button type='submit' name='eliminaPost' onClick={() => handleClick('elimina')}>Elimina Post</button>\n\n            </form>\n        \n        </div>\n    \n        \n\n    );\n\n}\n\n\nexport default ModificaPost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}