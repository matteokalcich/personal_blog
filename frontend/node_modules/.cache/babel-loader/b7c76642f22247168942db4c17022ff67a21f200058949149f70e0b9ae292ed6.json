{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import Header from'../components/Header';import Lottie from'lottie-react';import loginLock from'../../assets/animations/login_lock.json';import successful_login from'../../assets/animations/successful_login.json';import'../../styles/Login.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Login(){const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[correctCredentials,setCorrectCredentials]=useState(false);const[error,setError]=useState('');const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();// Aggiungi la classe 'loading' al bottone per attivare l'animazione\nconst loginButton=document.querySelector('.btnLogIn');loginButton.classList.add('loading');try{const response=await fetch('http://localhost:3000/api/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password})});const data=await response.json();if(response.status===200){setCorrectCredentials(true);}else{setError(data.message);setCorrectCredentials(false);}}catch(error){console.error('Errore durante il login:',error);setError('Errore del server.');}finally{// Rimuovi la classe 'loading' una volta che la risposta è arrivata\nloginButton.classList.remove('loading');}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"divRender\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"credenziali\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Username: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:username,onChange:e=>setUsername(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"credenziali\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"divBtnLogIn\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"btnLogIn\",type:\"submit\",children:[\"Login\",/*#__PURE__*/_jsx(Lottie,{id:\"lottie_login_lock\",animationData:loginLock})]}),correctCredentials&&/*#__PURE__*/_jsx(\"div\",{className:\"test\",children:/*#__PURE__*/_jsx(Lottie,{animationData:successful_login// Animazione\n,loop:false,onComplete:()=>{setTimeout(()=>{navigate('/backoffice',{state:{username}});},100);},className:\"lottieCheckLogin\"})})]})]})]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error})]});}export default Login;","map":{"version":3,"names":["React","useState","useNavigate","Header","Lottie","loginLock","successful_login","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Login","username","setUsername","password","setPassword","correctCredentials","setCorrectCredentials","error","setError","navigate","handleSubmit","e","preventDefault","loginButton","document","querySelector","classList","add","response","fetch","method","headers","body","JSON","stringify","data","json","status","message","console","remove","children","className","onSubmit","type","placeholder","value","onChange","target","id","animationData","loop","onComplete","setTimeout","state","style","color"],"sources":["/Users/matteo/Documents/personal_blog/frontend/src/site/react/pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Lottie from 'lottie-react';\nimport loginLock from '../../assets/animations/login_lock.json';\nimport successful_login from '../../assets/animations/successful_login.json';\nimport '../../styles/Login.css';\n\nfunction Login() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [correctCredentials, setCorrectCredentials] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n  \n    // Aggiungi la classe 'loading' al bottone per attivare l'animazione\n    const loginButton = document.querySelector('.btnLogIn');\n    loginButton.classList.add('loading');\n  \n    try {\n      const response = await fetch('http://localhost:3000/api/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password }),\n      });\n  \n      const data = await response.json();\n  \n      if (response.status === 200) {\n        setCorrectCredentials(true);\n      } else {\n        setError(data.message);\n        setCorrectCredentials(false);\n      }\n    } catch (error) {\n      console.error('Errore durante il login:', error);\n      setError('Errore del server.');\n    } finally {\n      // Rimuovi la classe 'loading' una volta che la risposta è arrivata\n      loginButton.classList.remove('loading');\n    }\n  };\n  \n\n  return (\n    <>\n      <Header />\n\n      <div className='divRender'>\n        <h2>Login</h2>\n\n        <form onSubmit={handleSubmit}>\n          <div className='credenziali'>\n            <label>Username: </label>\n            <input\n              type='text'\n              placeholder='Username'\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n\n            />\n          </div>\n\n          <div className='credenziali'>\n            <label>Password: </label>\n            <input\n              type='password'\n              placeholder='Password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n\n            />\n          </div>\n\n          <div className='divBtnLogIn'>\n            <button className='btnLogIn' type='submit'>\n              Login\n              <Lottie id='lottie_login_lock' animationData={loginLock} />\n            </button>\n            {correctCredentials && (\n              <div className='test'>\n                <Lottie\n                  animationData={successful_login}  // Animazione\n                  loop={false}\n                  onComplete={() => {\n                    setTimeout(() => {\n                      navigate('/backoffice', { state: { username } });\n                    }, 100);\n                  }}\n                  className='lottieCheckLogin'\n                />\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n\n      \n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </>\n  );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}