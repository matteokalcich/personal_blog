{"ast":null,"code":"var _jsxFileName = \"/Users/matteo/Documents/personal_blog/frontend/src/site/react/pages/ModificaPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Header from '../components/Header';\nimport RicercaPost from '../components/RicercaPost';\nimport '../../styles/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModificaPost({\n  username\n}) {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const id = location.state ? location.state.id : null;\n  ; // Estrae id dallo stato, e gestisce il caso in cui sia undefined\n\n  const [titoloPostInsert, setTitoloPostInsert] = useState('');\n  const [descrizionePostInsert, setDescrizionePostInsert] = useState('');\n  const [immaginePostInsert, setImmaginePostInsert] = useState('');\n  const [error, setError] = useState('');\n\n  // Funzione per eseguire la ricerca dei post\n  const filterRequest = async elimina => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/changePost`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          idPost: id,\n          titoloPost: titoloPostInsert,\n          descrizionePost: descrizionePostInsert,\n          pathFotoPost: immaginePostInsert,\n          elimina\n        })\n      });\n      const data = await response.json();\n      if (response.status === 200) {\n        setError('');\n      } else {\n        setError(data.message);\n      }\n    } catch (error) {\n      console.error('Errore durante il filtro:', error);\n      setError('Errore del server.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n  };\n  const handleClick = t => {\n    switch (t) {\n      case 'modifica':\n        filterRequest(false);\n        break;\n      case 'elimina':\n        filterRequest(true);\n        navigate('/backoffice');\n        break;\n    }\n  };\n  const loginRedirect = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paginaIntera\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Ciao \", username, \", sei pronto a modificare/eliminare il post?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: loginRedirect,\n        children: \"LOGOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"titoloPostToInsert\",\n        placeholder: \"Titolo\",\n        onChange: e => {\n          setTitoloPostInsert(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"descrizionePostToInsert\",\n        placeholder: \"Descrizione\",\n        onChange: e => {\n          setDescrizionePostInsert(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"immaginePostToInsert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"Annulla\",\n        onClick: () => handleClick('annulla'),\n        children: \"Annulla Modifiche\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"modificaPost\",\n        onClick: () => handleClick('modifica'),\n        children: \"Modifica Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"eliminaPost\",\n        onClick: () => handleClick('elimina'),\n        children: \"Elimina Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n_s(ModificaPost, \"b1I5gR9LWcMgk/xvCmhTeuFg5E8=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ModificaPost;\nexport default ModificaPost;\nvar _c;\n$RefreshReg$(_c, \"ModificaPost\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","Header","RicercaPost","jsxDEV","_jsxDEV","ModificaPost","username","_s","navigate","location","id","state","titoloPostInsert","setTitoloPostInsert","descrizionePostInsert","setDescrizionePostInsert","immaginePostInsert","setImmaginePostInsert","error","setError","filterRequest","elimina","response","fetch","method","headers","body","JSON","stringify","idPost","titoloPost","descrizionePost","pathFotoPost","data","json","status","message","console","handleSubmit","e","preventDefault","handleClick","t","loginRedirect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","action","onSubmit","name","placeholder","onChange","target","value","_c","$RefreshReg$"],"sources":["/Users/matteo/Documents/personal_blog/frontend/src/site/react/pages/ModificaPost.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Header from '../components/Header';\nimport RicercaPost from '../components/RicercaPost';\nimport '../../styles/index.css';\n\nfunction ModificaPost({username}) {\n\n    const navigate = useNavigate();\n\n    const location = useLocation();\n    const id = location.state ? location.state.id : null;\n    ; // Estrae id dallo stato, e gestisce il caso in cui sia undefined\n\n\n    const [titoloPostInsert, setTitoloPostInsert] = useState('');\n    const [descrizionePostInsert, setDescrizionePostInsert] = useState('');\n    const [immaginePostInsert, setImmaginePostInsert] = useState('');\n    const [error, setError] = useState('');\n\n    \n\n    // Funzione per eseguire la ricerca dei post\n    const filterRequest = async (elimina) => {\n\n        try {\n            const response = await fetch(\n                `http://localhost:3000/api/changePost`,\n                {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    \n                    body: JSON.stringify({ \n                        idPost: id, \n                        titoloPost: titoloPostInsert, \n                        descrizionePost: descrizionePostInsert, \n                        pathFotoPost: immaginePostInsert, \n                        elimina \n                    }),\n                    \n                }\n            );\n\n            const data = await response.json();\n\n            if (response.status === 200) {\n\n                setError('');\n                \n            } else {\n\n                setError(data.message);\n            }\n\n        } catch (error) {\n\n            console.error('Errore durante il filtro:', error);\n            setError('Errore del server.');\n\n        }\n    };\n\n    const handleSubmit = async (e) => {\n\n        e.preventDefault();\n\n    }\n\n    const handleClick = (t) => {\n\n        switch(t){\n\n            case 'modifica':\n\n                filterRequest(false);\n\n                break;\n\n\n            case 'elimina':\n\n                filterRequest(true);\n\n                navigate('/backoffice');\n\n                break;\n        }\n    }\n\n\n    const loginRedirect = () => {\n  \n      navigate('/');\n    };\n\n    return (\n\n        <div className='paginaIntera'>\n        \n            <Header />\n\n            <div className=\"welcome\">\n                <h2>Ciao {username}, sei pronto a modificare/eliminare il post?</h2>\n                <button type=\"button\" onClick={loginRedirect}>\n                    LOGOUT\n                </button>\n            </div>\n\n            <form action=\"\" onSubmit={handleSubmit}>\n\n                <input type=\"text\" name=\"titoloPostToInsert\" placeholder=\"Titolo\" onChange={(e) => {\n\n                    setTitoloPostInsert(e.target.value);\n\n                }}/>\n                <textarea name=\"descrizionePostToInsert\" placeholder=\"Descrizione\" onChange={(e) => {\n\n                    setDescrizionePostInsert(e.target.value);\n\n                }}/>\n\n                <input type=\"file\" name=\"immaginePostToInsert\" />\n                <button type=\"submit\" name=\"Annulla\" onClick={() => handleClick('annulla')}>Annulla Modifiche</button>\n                <button type=\"submit\" name=\"modificaPost\" onClick={() => handleClick('modifica')}>Modifica Post</button>\n                <button type=\"submit\" name=\"eliminaPost\" onClick={() => handleClick('elimina')}>Elimina Post</button>\n\n            </form>\n        \n        </div>\n    \n        \n\n    );\n\n}\n\n\nexport default ModificaPost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}