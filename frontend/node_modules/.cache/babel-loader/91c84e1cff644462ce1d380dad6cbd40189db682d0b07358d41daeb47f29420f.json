{"ast":null,"code":"var _jsxFileName = \"/Users/matteo/Documents/personal_blog/frontend/src/site/react/pages/ModificaPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModificaPost({\n  username\n}) {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    id\n  } = location.state || {};\n  const [titoloPostInsert, setTitoloPostInsert] = useState('');\n  const [descrizionePostInsert, setDescrizionePostInsert] = useState('');\n  const [immaginePostInsert, setImmaginePostInsert] = useState(null);\n  const [error, setError] = useState('');\n  const filterRequest = async elimina => {\n    try {\n      const formData = new FormData();\n      formData.append('idPost', id);\n      formData.append('titoloPost', titoloPostInsert);\n      formData.append('descrizionePost', descrizionePostInsert);\n      formData.append('pathFotoPost', immaginePostInsert);\n      formData.append('elimina', elimina);\n      const response = await fetch('http://localhost:3000/api/changePost', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (response.status === 200) {\n        setError('');\n        if (!elimina) navigate('/backoffice');\n      } else {\n        setError(data.message);\n      }\n    } catch (error) {\n      console.error('Errore durante il filtro:', error);\n      setError('Errore del server.');\n    }\n  };\n  const handleClick = t => {\n    switch (t) {\n      case 'modifica':\n        filterRequest(false);\n        break;\n      case 'elimina':\n        filterRequest(true);\n        navigate('/backoffice');\n        break;\n      case 'annulla':\n        setTitoloPostInsert('');\n        setDescrizionePostInsert('');\n        setImmaginePostInsert(null);\n        break;\n    }\n  };\n  const loginRedirect = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paginaIntera\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Ciao \", username, \", sei pronto a modificare/eliminare il post?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: loginRedirect,\n        children: \"LOGOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"titoloPostToInsert\",\n        placeholder: \"Titolo\",\n        value: titoloPostInsert,\n        onChange: e => setTitoloPostInsert(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"descrizionePostToInsert\",\n        placeholder: \"Descrizione\",\n        value: descrizionePostInsert,\n        onChange: e => setDescrizionePostInsert(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"immaginePostToInsert\",\n        onChange: e => setImmaginePostInsert(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleClick('annulla'),\n        children: \"Annulla Modifiche\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleClick('modifica'),\n        children: \"Modifica Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleClick('elimina'),\n        children: \"Elimina Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(ModificaPost, \"81qLEEJEsZlWliyuqL7/kHCOIy8=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ModificaPost;\nexport default ModificaPost;\nvar _c;\n$RefreshReg$(_c, \"ModificaPost\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","Header","jsxDEV","_jsxDEV","ModificaPost","username","_s","navigate","location","id","state","titoloPostInsert","setTitoloPostInsert","descrizionePostInsert","setDescrizionePostInsert","immaginePostInsert","setImmaginePostInsert","error","setError","filterRequest","elimina","formData","FormData","append","response","fetch","method","body","data","json","status","message","console","handleClick","t","loginRedirect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","name","placeholder","value","onChange","e","target","files","_c","$RefreshReg$"],"sources":["/Users/matteo/Documents/personal_blog/frontend/src/site/react/pages/ModificaPost.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Header from '../components/Header';\n\nfunction ModificaPost({ username }) {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { id } = location.state || {};\n\n    const [titoloPostInsert, setTitoloPostInsert] = useState('');\n    const [descrizionePostInsert, setDescrizionePostInsert] = useState('');\n    const [immaginePostInsert, setImmaginePostInsert] = useState(null);\n    const [error, setError] = useState('');\n\n    const filterRequest = async (elimina) => {\n        try {\n            const formData = new FormData();\n            formData.append('idPost', id);\n            formData.append('titoloPost', titoloPostInsert);\n            formData.append('descrizionePost', descrizionePostInsert);\n            formData.append('pathFotoPost', immaginePostInsert);\n            formData.append('elimina', elimina);\n\n            const response = await fetch('http://localhost:3000/api/changePost', {\n                method: 'POST',\n                body: formData,\n            });\n\n            const data = await response.json();\n\n            if (response.status === 200) {\n                setError('');\n                if (!elimina) navigate('/backoffice');\n            } else {\n                setError(data.message);\n            }\n        } catch (error) {\n            console.error('Errore durante il filtro:', error);\n            setError('Errore del server.');\n        }\n    };\n\n    const handleClick = (t) => {\n        switch (t) {\n            case 'modifica':\n                filterRequest(false);\n                break;\n            case 'elimina':\n                filterRequest(true);\n                navigate('/backoffice');\n                break;\n            case 'annulla':\n                setTitoloPostInsert('');\n                setDescrizionePostInsert('');\n                setImmaginePostInsert(null);\n                break;\n        }\n    };\n\n    const loginRedirect = () => {\n        navigate('/');\n    };\n\n    return (\n        <div className=\"paginaIntera\">\n            <Header />\n            <div className=\"welcome\">\n                <h2>Ciao {username}, sei pronto a modificare/eliminare il post?</h2>\n                <button type=\"button\" onClick={loginRedirect}>\n                    LOGOUT\n                </button>\n            </div>\n\n            <form>\n                <input\n                    type=\"text\"\n                    name=\"titoloPostToInsert\"\n                    placeholder=\"Titolo\"\n                    value={titoloPostInsert}\n                    onChange={(e) => setTitoloPostInsert(e.target.value)}\n                />\n                <textarea\n                    name=\"descrizionePostToInsert\"\n                    placeholder=\"Descrizione\"\n                    value={descrizionePostInsert}\n                    onChange={(e) => setDescrizionePostInsert(e.target.value)}\n                />\n                <input type=\"file\" name=\"immaginePostToInsert\" onChange={(e) => setImmaginePostInsert(e.target.files[0])} />\n                <button type=\"button\" onClick={() => handleClick('annulla')}>\n                    Annulla Modifiche\n                </button>\n                <button type=\"button\" onClick={() => handleClick('modifica')}>\n                    Modifica Post\n                </button>\n                <button type=\"button\" onClick={() => handleClick('elimina')}>\n                    Elimina Post\n                </button>\n            </form>\n            {error && <p className=\"error\">{error}</p>}\n        </div>\n    );\n}\n\nexport default ModificaPost;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}