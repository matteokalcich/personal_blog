{"ast":null,"code":"var _jsxFileName = \"/Users/matteo/Documents/personal_blog/frontend/src/site/react/pages/ModificaPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Header from '../components/Header';\nimport RicercaPost from '../components/RicercaPost';\nimport '../../styles/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModificaPost({\n  username\n}) {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const id = location.state ? location.state.id : null;\n  ; // Estrae id dallo stato, e gestisce il caso in cui sia undefined\n\n  const [titoloPostInsert, setTitoloPostInsert] = useState('');\n  const [descrizionePostInsert, setDescrizionePostInsert] = useState('');\n  const [immaginePostInsert, setImmaginePostInsert] = useState('');\n  const [error, setError] = useState('');\n  function uploadSuccess({\n    data\n  }) {\n    return {\n      type: 'UPLOAD_DOCUMENT_SUCCESS',\n      data\n    };\n  }\n  function uploadFail(error) {\n    return {\n      type: 'UPLOAD_DOCUMENT_FAIL',\n      error\n    };\n  }\n  function uploadDocumentRequest({\n    name\n  }) {\n    let data = new FormData();\n    data.append('file', document);\n    data.append('name', name);\n    return dispatch => {\n      axios.post('/files', data).then(response => dispatch(uploadSuccess(response))).catch(error => dispatch(uploadFail(error)));\n    };\n  }\n\n  /*\n   ... A lot of Redux / React boilerplate happens here \n   like mapDispatchToProps and mapStateToProps and @connect ...\n  */\n\n  // Component method\n  function handleFileUpload({\n    file\n  }) {\n    file = files[0];\n    this.props.actions.uploadRequest({\n      file,\n      name: 'Awesome Cat Pic'\n    });\n  }\n  const doupload = () => {\n    let data = document.getElementById('file').files[0];\n    let entry = document.getElementById('file').files[0];\n    console.log('doupload', entry, data);\n    fetch('http://localhost:3000/uploads/' + encodeURIComponent(entry.name), {\n      method: 'PUT',\n      body: data\n    });\n    alert('your file has been uploaded');\n  };\n\n  // Funzione per eseguire la ricerca dei post\n  const filterRequest = async elimina => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/changePost`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          idPost: id,\n          titoloPost: titoloPostInsert,\n          descrizionePost: descrizionePostInsert,\n          pathFotoPost: immaginePostInsert,\n          elimina\n        })\n      });\n      const data = await response.json();\n      if (response.status === 200) {\n        setError('');\n      } else {\n        setError(data.message);\n      }\n    } catch (error) {\n      console.error('Errore durante il filtro:', error);\n      setError('Errore del server.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n  };\n  const handleClick = t => {\n    switch (t) {\n      case 'modifica':\n        doupload();\n        filterRequest(false);\n        navigate('/backoffice');\n        break;\n      case 'elimina':\n        filterRequest(true);\n        navigate('/backoffice');\n        break;\n    }\n  };\n  const loginRedirect = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paginaIntera\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Ciao \", username, \", sei pronto a modificare/eliminare il post?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: loginRedirect,\n        children: \"LOGOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"titoloPostToInsert\",\n        placeholder: \"Titolo\",\n        onChange: e => {\n          setTitoloPostInsert(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"descrizionePostToInsert\",\n        placeholder: \"Descrizione\",\n        onChange: e => {\n          setDescrizionePostInsert(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"immaginePostToInsert\",\n        id: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"Annulla\",\n        onClick: () => handleClick('annulla'),\n        children: \"Annulla Modifiche\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"modificaPost\",\n        onClick: () => handleClick('modifica'),\n        children: \"Modifica Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"eliminaPost\",\n        onClick: () => handleClick('elimina'),\n        children: \"Elimina Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n}\n_s(ModificaPost, \"b1I5gR9LWcMgk/xvCmhTeuFg5E8=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ModificaPost;\nexport default ModificaPost;\nvar _c;\n$RefreshReg$(_c, \"ModificaPost\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","Header","RicercaPost","jsxDEV","_jsxDEV","ModificaPost","username","_s","navigate","location","id","state","titoloPostInsert","setTitoloPostInsert","descrizionePostInsert","setDescrizionePostInsert","immaginePostInsert","setImmaginePostInsert","error","setError","uploadSuccess","data","type","uploadFail","uploadDocumentRequest","name","FormData","append","document","dispatch","axios","post","then","response","catch","handleFileUpload","file","files","props","actions","uploadRequest","doupload","getElementById","entry","console","log","fetch","encodeURIComponent","method","body","alert","filterRequest","elimina","headers","JSON","stringify","idPost","titoloPost","descrizionePost","pathFotoPost","json","status","message","handleSubmit","e","preventDefault","handleClick","t","loginRedirect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","action","onSubmit","placeholder","onChange","target","value","_c","$RefreshReg$"],"sources":["/Users/matteo/Documents/personal_blog/frontend/src/site/react/pages/ModificaPost.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Header from '../components/Header';\nimport RicercaPost from '../components/RicercaPost';\nimport '../../styles/index.css';\n\nfunction ModificaPost({username}) {\n\n    const navigate = useNavigate();\n    const location = useLocation();\n    const id = location.state ? location.state.id : null;; // Estrae id dallo stato, e gestisce il caso in cui sia undefined\n\n\n    const [titoloPostInsert, setTitoloPostInsert] = useState('');\n    const [descrizionePostInsert, setDescrizionePostInsert] = useState('');\n    const [immaginePostInsert, setImmaginePostInsert] = useState('');\n    const [error, setError] = useState('');\n\n\n\n\n    function uploadSuccess({ data }) {\n        return {\n          type: 'UPLOAD_DOCUMENT_SUCCESS',\n          data,\n        };\n      }\n      \n    function uploadFail(error) {\n        return {\n          type: 'UPLOAD_DOCUMENT_FAIL',\n          error,\n        };\n      }\n      \n    function uploadDocumentRequest({ name }) {  \n        let data = new FormData();\n        data.append('file', document);\n        data.append('name', name);\n      \n        return (dispatch) => {\n          axios.post('/files', data)\n            .then(response => dispatch(uploadSuccess(response)))\n            .catch(error => dispatch(uploadFail(error)));\n        };\n      }\n      \n      /*\n       ... A lot of Redux / React boilerplate happens here \n       like mapDispatchToProps and mapStateToProps and @connect ...\n      */\n      \n      // Component method\n    function handleFileUpload({ file }) {\n         file = files[0];\n        this.props.actions.uploadRequest({\n           file,\n           name: 'Awesome Cat Pic'\n        })\n      }\n\n\n\n\n\n\n\n\n    const doupload = () => {\n\n        let data = document.getElementById('file').files[0];\n        let entry = document.getElementById('file').files[0];\n        console.log('doupload',entry,data)\n        fetch('http://localhost:3000/uploads/' + encodeURIComponent(entry.name), {method:'PUT',body:data});\n        alert('your file has been uploaded');\n    }\n\n    // Funzione per eseguire la ricerca dei post\n    const filterRequest = async (elimina) => {\n\n        try {\n            const response = await fetch(\n                `http://localhost:3000/api/changePost`,\n                {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    \n                    body: JSON.stringify({ \n                        idPost: id, \n                        titoloPost: titoloPostInsert, \n                        descrizionePost: descrizionePostInsert, \n                        pathFotoPost: immaginePostInsert, \n                        elimina \n                    }),\n                    \n                }\n            );\n\n            const data = await response.json();\n\n            if (response.status === 200) {\n\n                setError('');\n                \n            } else {\n\n                setError(data.message);\n            }\n\n        } catch (error) {\n\n            console.error('Errore durante il filtro:', error);\n            setError('Errore del server.');\n\n        }\n    };\n\n    const handleSubmit = async (e) => {\n\n        e.preventDefault();\n\n    }\n\n    const handleClick = (t) => {\n\n        switch(t){\n\n            case 'modifica':\n\n                doupload();\n\n                filterRequest(false);\n\n                navigate('/backoffice');\n\n                break;\n\n\n            case 'elimina':\n\n                filterRequest(true);\n\n                navigate('/backoffice');\n\n                break;\n        }\n    }\n\n\n    const loginRedirect = () => {\n  \n      navigate('/');\n    };\n\n    return (\n\n        <div className='paginaIntera'>\n        \n            <Header />\n\n            <div className='welcome'>\n                <h2>Ciao {username}, sei pronto a modificare/eliminare il post?</h2>\n                <button type='button' onClick={loginRedirect}>\n                    LOGOUT\n                </button>\n            </div>\n\n            <form action='' onSubmit={handleSubmit}>\n\n                <input type='text' name='titoloPostToInsert' placeholder='Titolo' onChange={(e) => {\n\n                    setTitoloPostInsert(e.target.value);\n\n                }}/>\n                <textarea name='descrizionePostToInsert' placeholder='Descrizione' onChange={(e) => {\n\n                    setDescrizionePostInsert(e.target.value);\n\n                }}/>\n\n                <input type='file' name='immaginePostToInsert' id='file' />\n                <button type='submit' name='Annulla' onClick={() => handleClick('annulla')}>Annulla Modifiche</button>\n                <button type='submit' name='modificaPost' onClick={() => handleClick('modifica')}>Modifica Post</button>\n                <button type='submit' name='eliminaPost' onClick={() => handleClick('elimina')}>Elimina Post</button>\n\n            </form>\n        \n        </div>\n    \n        \n\n    );\n\n}\n\n\nexport default ModificaPost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}