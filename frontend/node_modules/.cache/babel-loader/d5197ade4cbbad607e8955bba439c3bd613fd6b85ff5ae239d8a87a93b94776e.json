{"ast":null,"code":"import swear from \"swear\";\nimport { promisify } from \"util\";\nimport { exec } from \"child_process\";\nconst newExec = promisify(exec);\nexport default (command, buffer = 10) => {\n  const maxBuffer = buffer * 1024 * 1024;\n  return swear(newExec(command, {\n    maxBuffer\n  }).then(out => {\n    if (out.stderr) throw new Error(out.stderr);\n    return out.stdout.trim();\n  }));\n};","map":{"version":3,"names":["swear","promisify","exec","newExec","command","buffer","maxBuffer","then","out","stderr","Error","stdout","trim"],"sources":["/Users/matteo/Documents/personal_blog/frontend/node_modules/atocha/atocha.js"],"sourcesContent":["import swear from \"swear\";\nimport { promisify } from \"util\";\nimport { exec } from \"child_process\";\n\nconst newExec = promisify(exec);\n\nexport default (command, buffer = 10) => {\n  const maxBuffer = buffer * 1024 * 1024;\n  return swear(\n    newExec(command, { maxBuffer }).then((out) => {\n      if (out.stderr) throw new Error(out.stderr);\n      return out.stdout.trim();\n    })\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,MAAM;AAChC,SAASC,IAAI,QAAQ,eAAe;AAEpC,MAAMC,OAAO,GAAGF,SAAS,CAACC,IAAI,CAAC;AAE/B,eAAe,CAACE,OAAO,EAAEC,MAAM,GAAG,EAAE,KAAK;EACvC,MAAMC,SAAS,GAAGD,MAAM,GAAG,IAAI,GAAG,IAAI;EACtC,OAAOL,KAAK,CACVG,OAAO,CAACC,OAAO,EAAE;IAAEE;EAAU,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;IAC5C,IAAIA,GAAG,CAACC,MAAM,EAAE,MAAM,IAAIC,KAAK,CAACF,GAAG,CAACC,MAAM,CAAC;IAC3C,OAAOD,GAAG,CAACG,MAAM,CAACC,IAAI,CAAC,CAAC;EAC1B,CAAC,CACH,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}