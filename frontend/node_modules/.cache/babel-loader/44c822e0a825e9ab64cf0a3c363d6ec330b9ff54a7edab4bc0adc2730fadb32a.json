{"ast":null,"code":"var _jsxFileName = \"/Users/matteo/Documents/personal_blog/frontend/src/site/react/pages/CreazionePost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Header from '../components/Header';\nimport RicercaPost from '../components/RicercaPost';\nimport '../../styles/index.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreazionePost() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const id = location.state ? location.state.id : null; // Estrae id dallo stato, e gestisce il caso in cui sia undefined\n\n  const [immagine, setimmagine] = useState(null);\n  const [titoloPostInsert, setTitoloPostInsert] = useState('');\n  const [descrizionePostInsert, setDescrizionePostInsert] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const filterRequestNew = async () => {\n    const formData = new FormData();\n    formData.append('idPost', id);\n    formData.append('titoloPost', titoloPostInsert);\n    formData.append('descrizionePost', descrizionePostInsert);\n    if (immagine) {\n      formData.append('file', immagine); // Aggiungi il immagine se presente\n    }\n    try {\n      const response = await axios.post(`http://localhost:3000/api/createPost`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.status === 200) {\n        setError('');\n        setMessage('Operazione completata con successo.');\n      } else {\n        setError(response.message || 'Errore sconosciuto.');\n      }\n    } catch (error) {\n      console.error('Errore durante la richiesta:', error);\n      setError('Errore del server.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n  };\n  const handleClick = t => {\n    switch (t) {\n      case 'crea':\n        filterRequestNew(false);\n        navigate('/backoffice');\n        break;\n      case 'annulla':\n        navigate('/backoffice');\n        break;\n    }\n  };\n  const loginRedirect = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paginaIntera\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ciao, sei pronto a creare un post?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: loginRedirect,\n        children: \"LOGOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"titoloPostToInsert\",\n        placeholder: \"Titolo\",\n        onChange: e => {\n          setTitoloPostInsert(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"descrizionePostToInsert\",\n        placeholder: \"Descrizione\",\n        onChange: e => {\n          setDescrizionePostInsert(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"immaginePostToInsert\",\n        id: \"file\",\n        onChange: e => {\n          setimmagine(e.target.immagines[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"Annulla\",\n        onClick: () => handleClick('annulla'),\n        children: \"Annulla Modifiche\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"creaPost\",\n        onClick: () => handleClick('crea'),\n        children: \"Crea Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(CreazionePost, \"dR894mCQZgYRRKYVQiePZTd2zqk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = CreazionePost;\nexport default CreazionePost;\nvar _c;\n$RefreshReg$(_c, \"CreazionePost\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","Header","RicercaPost","axios","jsxDEV","_jsxDEV","CreazionePost","_s","navigate","location","id","state","immagine","setimmagine","titoloPostInsert","setTitoloPostInsert","descrizionePostInsert","setDescrizionePostInsert","error","setError","message","setMessage","filterRequestNew","formData","FormData","append","response","post","headers","status","console","handleSubmit","e","preventDefault","handleClick","t","loginRedirect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","action","onSubmit","encType","name","placeholder","onChange","target","value","immagines","_c","$RefreshReg$"],"sources":["/Users/matteo/Documents/personal_blog/frontend/src/site/react/pages/CreazionePost.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Header from '../components/Header';\nimport RicercaPost from '../components/RicercaPost';\nimport '../../styles/index.css';\nimport axios from 'axios';\n\nfunction CreazionePost() {\n\n    const navigate = useNavigate();\n    const location = useLocation();\n    const id = location.state ? location.state.id : null; // Estrae id dallo stato, e gestisce il caso in cui sia undefined\n\n    const [immagine, setimmagine] = useState(null);\n    const [titoloPostInsert, setTitoloPostInsert] = useState('');\n    const [descrizionePostInsert, setDescrizionePostInsert] = useState('');\n    const [error, setError] = useState('');\n    const [message, setMessage] = useState('');\n\n    const filterRequestNew = async () => {\n        const formData = new FormData();\n    \n        formData.append('idPost', id);\n        formData.append('titoloPost', titoloPostInsert);\n        formData.append('descrizionePost', descrizionePostInsert);\n        \n        if (immagine) {\n            formData.append('file', immagine); // Aggiungi il immagine se presente\n        }\n    \n        try {\n            const response = await axios.post(\n                `http://localhost:3000/api/createPost`,\n                formData,\n                {\n                    headers: {\n                        'Content-Type': 'multipart/form-data',\n                    },\n                }\n            );\n    \n            if (response.status === 200) {\n                setError('');\n                setMessage('Operazione completata con successo.');\n            } else {\n                setError(response.message || 'Errore sconosciuto.');\n            }\n        } catch (error) {\n            console.error('Errore durante la richiesta:', error);\n            setError('Errore del server.');\n        }\n    };\n    \n\n    const handleSubmit = async (e) => {\n\n        e.preventDefault();\n\n    }\n\n    const handleClick = (t) => {\n\n        switch(t){\n\n            case 'crea':\n\n\n                filterRequestNew(false);\n\n                navigate('/backoffice');\n\n                break;\n\n\n            case 'annulla':\n\n                navigate('/backoffice');\n\n                break;\n        }\n    }\n\n\n    const loginRedirect = () => {\n  \n      navigate('/');\n    };\n\n    return (\n\n        <div className='paginaIntera'>\n        \n            <Header />\n\n            <div className='welcome'>\n                <h2>Ciao, sei pronto a creare un post?</h2>\n                <button type='button' onClick={loginRedirect}>\n                    LOGOUT\n                </button>\n            </div>\n\n            <form action='' onSubmit={handleSubmit} encType='multipart/form-data'>\n\n                <input type='text' name='titoloPostToInsert' placeholder='Titolo' onChange={(e) => {\n\n                    setTitoloPostInsert(e.target.value);\n\n                }}/>\n                <textarea name='descrizionePostToInsert' placeholder='Descrizione' onChange={(e) => {\n\n                    setDescrizionePostInsert(e.target.value);\n\n                }}/>\n\n                <input type='file' name='immaginePostToInsert' id='file'\n\n                    onChange={(e) => {\n\n                        setimmagine(e.target.immagines[0]);\n                    }}\n                />\n                <button type='submit' name='Annulla' onClick={() => handleClick('annulla')}>Annulla Modifiche</button>\n                <button type='submit' name='creaPost' onClick={() => handleClick('crea')}>Crea Post</button>\n\n            </form>\n        \n        </div>\n    \n        \n\n    );\n\n}\n\n\nexport default CreazionePost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}