{"ast":null,"code":"var _jsxFileName = \"/Users/matteo/Documents/nodejs_login/frontend/src/components/react/DettagliPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Header from './Header';\nimport { useNavigate } from 'react-router-dom';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DettagliPost({\n  idPost\n}) {\n  _s();\n  const [idPostVisualizzare, setIdPostVisualizzare] = useState('');\n  const [resultRequest, setResultRequest] = useState('');\n  // Funzione per eseguire la ricerca dei post\n  const filterRequest = async () => {\n    try {\n      // Effettua la richiesta GET al server\n      const response = await fetch(`http://localhost:3000/api/filterRequest?ricercaParola=test&ricercaAnno=2024&idPostVisualizzare=${idPostVisualizzare}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (response.status === 200) {\n        setResultRequest(data.result); // Aggiorna lo stato con i risultati della query\n      } else {\n        setError(data.message); // Gestisci l'errore\n        setResultRequest('');\n      }\n    } catch (error) {\n      console.error('Errore durante il filtro:', error);\n      setError('Errore del server.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"secondaParte\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"secondaParte_superiore\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"http://localhost:3001/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"secondaParteBtn\",\n            type: \"button\",\n            children: \"Torna alla pagina principale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), resultRequest]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(DettagliPost, \"hE0MJK+HUdB8dEHc4NN5GihXndo=\");\n_c = DettagliPost;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"DettagliPost\");","map":{"version":3,"names":["React","useState","useRef","Header","useNavigate","Post","jsxDEV","_jsxDEV","Fragment","_Fragment","DettagliPost","idPost","_s","idPostVisualizzare","setIdPostVisualizzare","resultRequest","setResultRequest","filterRequest","response","fetch","method","headers","data","json","status","result","setError","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","href","id","type","_c","$RefreshReg$"],"sources":["/Users/matteo/Documents/nodejs_login/frontend/src/components/react/DettagliPost.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Header from './Header';\nimport { useNavigate } from 'react-router-dom';\nimport Post from './Post';\n\nfunction DettagliPost({idPost}) {\n\n    const [idPostVisualizzare, setIdPostVisualizzare] = useState('');\n    const [resultRequest, setResultRequest] = useState('');\n    // Funzione per eseguire la ricerca dei post\n    const filterRequest = async () => {\n        try {\n        // Effettua la richiesta GET al server\n        const response = await fetch(\n            `http://localhost:3000/api/filterRequest?ricercaParola=test&ricercaAnno=2024&idPostVisualizzare=${idPostVisualizzare}`,\n            {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n            }\n        );\n\n        const data = await response.json();\n\n        if (response.status === 200) {\n\n\n            setResultRequest(data.result);  // Aggiorna lo stato con i risultati della query\n\n            \n        } else {\n            setError(data.message);  // Gestisci l'errore\n            setResultRequest('');\n        }\n        } catch (error) {\n        console.error('Errore durante il filtro:', error);\n        setError('Errore del server.');\n        }\n    };\n    \n    return(\n\n        <>\n\n        <Header />\n\n        <div className=\"secondaParte\">\n\n            \n            <div className=\"secondaParte_superiore\">\n\n                <a href=\"http://localhost:3001/\"><button id=\"secondaParteBtn\" type=\"button\">Torna alla pagina principale</button></a>\n                {resultRequest}\n\n            </div>\n            \n        </div>\n\n        </>\n    );\n}\n\nexport default Post;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,YAAYA,CAAC;EAACC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAE5B,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD;EACA,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACJ;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,kGAAkGN,kBAAkB,EAAE,EACtH;QACAO,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAC9C,CACJ,CAAC;MAED,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAIL,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;QAGzBR,gBAAgB,CAACM,IAAI,CAACG,MAAM,CAAC,CAAC,CAAE;MAGpC,CAAC,MAAM;QACHC,QAAQ,CAACJ,IAAI,CAACK,OAAO,CAAC,CAAC,CAAE;QACzBX,gBAAgB,CAAC,EAAE,CAAC;MACxB;IACA,CAAC,CAAC,OAAOY,KAAK,EAAE;MAChBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDF,QAAQ,CAAC,oBAAoB,CAAC;IAC9B;EACJ,CAAC;EAED,oBAEInB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBAEAvB,OAAA,CAACJ,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEV3B,OAAA;MAAK4B,SAAS,EAAC,cAAc;MAAAL,QAAA,eAGzBvB,OAAA;QAAK4B,SAAS,EAAC,wBAAwB;QAAAL,QAAA,gBAEnCvB,OAAA;UAAG6B,IAAI,EAAC,wBAAwB;UAAAN,QAAA,eAACvB,OAAA;YAAQ8B,EAAE,EAAC,iBAAiB;YAACC,IAAI,EAAC,QAAQ;YAAAR,QAAA,EAAC;UAA4B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EACpHnB,aAAa;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC;EAAA,eAEJ,CAAC;AAEX;AAACtB,EAAA,CAtDQF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAwDrB,eAAeL,IAAI;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}